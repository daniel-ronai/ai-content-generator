{
  "name": "Content Gen",
  "flow": [
    {
      "id": 57,
      "module": "typeform:WatchEventsWithResponses",
      "version": 2,
      "parameters": {
        "__IMTHOOK__": 2681645
      },
      "mapper": {},
      "metadata": {
        "designer": {
          "x": -1640,
          "y": -1758
        },
        "restore": {
          "parameters": {
            "__IMTHOOK__": {
              "data": {
                "editable": "true"
              },
              "label": "content generator 01"
            }
          }
        },
        "parameters": [
          {
            "name": "__IMTHOOK__",
            "type": "hook:typeform",
            "label": "Webhook",
            "required": true
          }
        ],
        "interface": [
          {
            "name": "form_id",
            "type": "text",
            "label": "Form ID"
          },
          {
            "name": "event",
            "spec": [
              {
                "name": "id",
                "type": "text",
                "label": "ID"
              },
              {
                "name": "type",
                "type": "text",
                "label": "Type"
              }
            ],
            "type": "collection",
            "label": "Event"
          },
          {
            "name": "token",
            "type": "text",
            "label": "Token"
          },
          {
            "name": "submitted_at",
            "type": "date",
            "label": "Submitted at"
          },
          {
            "name": "landed_at",
            "type": "date",
            "label": "Landed at"
          },
          {
            "name": "calculated",
            "spec": [
              {
                "name": "score",
                "type": "number",
                "label": "Score"
              }
            ],
            "type": "collection",
            "label": "Calculated"
          },
          {
            "name": "definition",
            "spec": [
              {
                "name": "id",
                "type": "text",
                "label": "ID"
              },
              {
                "name": "title",
                "type": "text",
                "label": "Title"
              },
              {
                "name": "fields",
                "spec": {
                  "spec": [
                    {
                      "name": "id",
                      "type": "text",
                      "label": "ID"
                    },
                    {
                      "name": "title",
                      "type": "text",
                      "label": "Title"
                    },
                    {
                      "name": "type",
                      "type": "text",
                      "label": "Type"
                    },
                    {
                      "name": "ref",
                      "type": "text",
                      "label": "Internal Name"
                    },
                    {
                      "name": "allow_multiple_selections",
                      "type": "boolean",
                      "label": "Allow Multiple Selections"
                    },
                    {
                      "name": "allow_other_choice",
                      "type": "boolean",
                      "label": "Allow Other Choice"
                    }
                  ],
                  "type": "collection"
                },
                "type": "array",
                "label": "Fields"
              }
            ],
            "type": "collection",
            "label": "Definition"
          },
          {
            "name": "answers",
            "spec": [
              {
                "name": "field",
                "spec": [
                  {
                    "name": "id",
                    "type": "text",
                    "label": "ID"
                  },
                  {
                    "name": "type",
                    "type": "text",
                    "label": "Type"
                  },
                  {
                    "name": "ref",
                    "type": "text",
                    "label": "Internal Name"
                  }
                ],
                "type": "collection",
                "label": "Field"
              },
              {
                "name": "type",
                "type": "text",
                "label": "Type"
              },
              {
                "name": "text",
                "type": "text",
                "label": "Text"
              },
              {
                "name": "email",
                "type": "email",
                "label": "Email"
              },
              {
                "name": "boolean",
                "type": "boolean",
                "label": "Boolean"
              },
              {
                "name": "number",
                "type": "number",
                "label": "Number"
              },
              {
                "name": "date",
                "type": "date",
                "label": "Date"
              },
              {
                "name": "long_text",
                "type": "text",
                "label": "Long Text"
              },
              {
                "name": "short_text",
                "type": "text",
                "label": "Short Text"
              },
              {
                "name": "file_url",
                "type": "url",
                "label": "File URL"
              },
              {
                "name": "url",
                "type": "url",
                "label": "URL"
              },
              {
                "name": "phone_number",
                "type": "text",
                "label": "Phone Number"
              },
              {
                "name": "choice",
                "spec": [
                  {
                    "name": "label",
                    "type": "text",
                    "label": "Label"
                  },
                  {
                    "name": "other",
                    "type": "text",
                    "label": "Other"
                  }
                ],
                "type": "collection",
                "label": "Choice"
              },
              {
                "name": "choices",
                "spec": [
                  {
                    "name": "labels",
                    "spec": {
                      "type": "text"
                    },
                    "type": "array",
                    "label": "Labels"
                  }
                ],
                "type": "collection",
                "label": "Choices"
              }
            ],
            "type": "array",
            "label": "Answers"
          },
          {
            "name": "mappable_answers",
            "spec": [
              {
                "name": "01JXD3PH7HD4RYA8WYZY9DEKZA",
                "type": "text",
                "label": ""
              }
            ],
            "type": "collection",
            "label": "Mappable Answers"
          },
          {
            "name": "hidden",
            "spec": [],
            "type": "collection",
            "label": "Hidden"
          }
        ]
      }
    },
    {
      "id": 58,
      "module": "util:FunctionSleep",
      "version": 1,
      "parameters": {},
      "mapper": {
        "duration": "3"
      },
      "metadata": {
        "designer": {
          "x": -1340,
          "y": -1758
        },
        "restore": {},
        "expect": [
          {
            "name": "duration",
            "type": "uinteger",
            "label": "Delay",
            "required": true,
            "validate": {
              "max": 300,
              "min": 1
            }
          }
        ]
      }
    },
    {
      "id": 59,
      "module": "typeform:ListResponses",
      "version": 2,
      "parameters": {
        "__IMTCONN__": 9317723
      },
      "mapper": {
        "limit": "1",
        "formId": "cAJ2rWmQ"
      },
      "metadata": {
        "designer": {
          "x": -1040,
          "y": -1758
        },
        "restore": {
          "expect": {
            "fields": {
              "mode": "chose"
            },
            "formId": {
              "mode": "chose",
              "label": "Content generator typeform"
            },
            "completed": {
              "mode": "chose"
            },
            "excluded_response_ids": {
              "mode": "chose"
            },
            "included_response_ids": {
              "mode": "chose"
            }
          },
          "parameters": {
            "__IMTCONN__": {
              "data": {
                "scoped": "true",
                "connection": "typeform2"
              },
              "label": "daniel.ronai.mail@gmail.com"
            }
          }
        },
        "parameters": [
          {
            "name": "__IMTCONN__",
            "type": "account:typeform2",
            "label": "Connection",
            "required": true
          }
        ],
        "expect": [
          {
            "name": "formId",
            "type": "select",
            "label": "Form ID",
            "required": true
          },
          {
            "name": "completed",
            "type": "boolean",
            "label": "Completed"
          },
          {
            "name": "query",
            "type": "text",
            "label": "Query"
          },
          {
            "name": "since",
            "type": "date",
            "label": "Since"
          },
          {
            "name": "until",
            "type": "date",
            "label": "Until"
          },
          {
            "name": "limit",
            "type": "uinteger",
            "label": "Limit"
          },
          {
            "name": "fields",
            "spec": {
              "name": "value",
              "type": "select",
              "dynamic": true,
              "options": [],
              "required": true
            },
            "type": "array",
            "label": "Fields"
          },
          {
            "name": "included_response_ids",
            "type": "select",
            "label": "Included Response IDs",
            "multiple": true
          },
          {
            "name": "excluded_response_ids",
            "type": "select",
            "label": "Excluded Response IDs",
            "multiple": true
          }
        ],
        "interface": [
          {
            "name": "__IMTLENGTH__",
            "type": "uinteger",
            "label": "Total number of bundles"
          },
          {
            "name": "__IMTINDEX__",
            "type": "uinteger",
            "label": "Bundle order position"
          },
          {
            "name": "landing_id",
            "type": "text",
            "label": "Landing ID"
          },
          {
            "name": "token",
            "type": "text",
            "label": "Token"
          },
          {
            "name": "response_id",
            "type": "text",
            "label": "Response ID"
          },
          {
            "name": "landed_at",
            "type": "date",
            "label": "Landed at"
          },
          {
            "name": "submitted_at",
            "type": "date",
            "label": "Submitted at"
          },
          {
            "name": "metadata",
            "spec": [
              {
                "name": "user_agent",
                "type": "text",
                "label": "User Agent"
              },
              {
                "name": "platform",
                "type": "text",
                "label": "Platform"
              },
              {
                "name": "referer",
                "type": "url",
                "label": "Referer"
              },
              {
                "name": "network_id",
                "type": "text",
                "label": "Network ID"
              },
              {
                "name": "browser",
                "type": "text",
                "label": "Browser"
              }
            ],
            "type": "collection",
            "label": "Metadata"
          },
          {
            "name": "answers",
            "spec": [
              {
                "name": "field",
                "spec": [
                  {
                    "name": "id",
                    "type": "text",
                    "label": "ID"
                  },
                  {
                    "name": "type",
                    "type": "text",
                    "label": "Type"
                  },
                  {
                    "name": "ref",
                    "type": "text",
                    "label": "Readable Name"
                  }
                ],
                "type": "collection",
                "label": "Field"
              },
              {
                "name": "type",
                "type": "text",
                "label": "Type"
              },
              {
                "name": "text",
                "type": "text",
                "label": "Text"
              },
              {
                "name": "email",
                "type": "email",
                "label": "Email"
              },
              {
                "name": "boolean",
                "type": "boolean",
                "label": "Boolean"
              },
              {
                "name": "number",
                "type": "number",
                "label": "Number"
              },
              {
                "name": "date",
                "type": "date",
                "label": "Date"
              },
              {
                "name": "long_text",
                "type": "text",
                "label": "Long Text"
              },
              {
                "name": "short_text",
                "type": "text",
                "label": "Short Text"
              },
              {
                "name": "file_url",
                "type": "url",
                "label": "File URL"
              },
              {
                "name": "url",
                "type": "url",
                "label": "URL"
              },
              {
                "name": "phone_number",
                "type": "text",
                "label": "Phone Number"
              },
              {
                "name": "choice",
                "spec": [
                  {
                    "name": "label",
                    "type": "text",
                    "label": "Label"
                  },
                  {
                    "name": "other",
                    "type": "text",
                    "label": "Other"
                  }
                ],
                "type": "collection",
                "label": "Choice"
              },
              {
                "name": "choices",
                "spec": [
                  {
                    "name": "labels",
                    "spec": {
                      "type": "text"
                    },
                    "type": "array",
                    "label": "Labels"
                  }
                ],
                "type": "collection",
                "label": "Choices"
              }
            ],
            "type": "array",
            "label": "Answers"
          },
          {
            "name": "mappable_answers",
            "spec": [
              {
                "name": "01JXD3PH7HD4RYA8WYZY9DEKZA",
                "type": "text",
                "label": "What is the title of the content?"
              },
              {
                "name": "f51fc047-44c0-44ea-8b90-b9c4b3ae8885",
                "type": "number",
                "label": "How many words should the content have?"
              },
              {
                "name": "df2ccb81-a129-48a8-8047-2f9607dcc079",
                "type": "text",
                "label": "What is the primary keyword for the content?"
              },
              {
                "name": "a2438682-c7a6-42d6-998a-570d3fd31e81",
                "type": "text",
                "label": "What are the secondary keywords for the content?"
              },
              {
                "name": "7cecb3d0-4c6f-401e-88c5-81cadd715eb6",
                "type": "text",
                "label": "Are there any internal links that should be included in the content?"
              },
              {
                "name": "a9080f3b-7e80-4265-b2e6-f41952e601b3",
                "type": "text",
                "label": "Are there any external links that should be included in the content?"
              },
              {
                "name": "2027e59e-a89f-4b99-a406-360fd4a3e73c",
                "type": "text",
                "label": "Additional instructions or specific requirements for the content. "
              }
            ],
            "type": "collection",
            "label": "Mappable Answers"
          },
          {
            "name": "hidden",
            "spec": [],
            "type": "collection",
            "label": "Hidden"
          },
          {
            "name": "calculated",
            "spec": [
              {
                "name": "score",
                "type": "number",
                "label": "Score"
              }
            ],
            "type": "collection",
            "label": "Calculated"
          }
        ]
      }
    },
    {
      "id": 61,
      "module": "google-sheets:addRow",
      "version": 2,
      "parameters": {
        "__IMTCONN__": 4086384
      },
      "mapper": {
        "from": "drive",
        "mode": "select",
        "values": {
          "0": "{{now}}",
          "1": "{{59.mappable_answers.`01JXD3PH7HD4RYA8WYZY9DEKZA`}}",
          "2": "{{59.mappable_answers.`f51fc047-44c0-44ea-8b90-b9c4b3ae8885`}}",
          "3": "{{59.mappable_answers.`df2ccb81-a129-48a8-8047-2f9607dcc079`}}",
          "4": "{{59.mappable_answers.`a2438682-c7a6-42d6-998a-570d3fd31e81`}}",
          "5": "{{59.mappable_answers.`7cecb3d0-4c6f-401e-88c5-81cadd715eb6`}}",
          "6": "{{59.mappable_answers.`a9080f3b-7e80-4265-b2e6-f41952e601b3`}}",
          "7": "{{59.mappable_answers.`2027e59e-a89f-4b99-a406-360fd4a3e73c`}}"
        },
        "sheetId": "main sheet",
        "spreadsheetId": "/1R-_sRlkns5mV6wAYP9j7AYl6pqFMbOes/1fOvGahayVd069wxb1QhA3US2br5kFM-fwVPjAZMvMSc",
        "includesHeaders": true,
        "insertDataOption": "INSERT_ROWS",
        "valueInputOption": "USER_ENTERED",
        "insertUnformatted": false
      },
      "metadata": {
        "designer": {
          "x": -739,
          "y": -1756
        },
        "restore": {
          "expect": {
            "from": {
              "label": "My Drive"
            },
            "mode": {
              "label": "Search by path"
            },
            "sheetId": {
              "label": "main sheet"
            },
            "spreadsheetId": {
              "path": [
                "Active Sheet Databases",
                "Content generator spreadsheet"
              ]
            },
            "includesHeaders": {
              "label": "Yes",
              "nested": [
                {
                  "name": "values",
                  "spec": [
                    {
                      "name": "0",
                      "type": "text",
                      "label": "Date (A)"
                    },
                    {
                      "name": "1",
                      "type": "text",
                      "label": "Title (B)"
                    },
                    {
                      "name": "2",
                      "type": "text",
                      "label": "length (C)"
                    },
                    {
                      "name": "3",
                      "type": "text",
                      "label": "primary keyword (D)"
                    },
                    {
                      "name": "4",
                      "type": "text",
                      "label": "secondary keywords (E)"
                    },
                    {
                      "name": "5",
                      "type": "text",
                      "label": "internal links (F)"
                    },
                    {
                      "name": "6",
                      "type": "text",
                      "label": "external links (G)"
                    },
                    {
                      "name": "7",
                      "type": "text",
                      "label": "Additional ins (H)"
                    },
                    {
                      "name": "8",
                      "type": "text",
                      "label": "(I)"
                    },
                    {
                      "name": "9",
                      "type": "text",
                      "label": "(J)"
                    },
                    {
                      "name": "10",
                      "type": "text",
                      "label": "(K)"
                    },
                    {
                      "name": "11",
                      "type": "text",
                      "label": "(L)"
                    },
                    {
                      "name": "12",
                      "type": "text",
                      "label": "(M)"
                    },
                    {
                      "name": "13",
                      "type": "text",
                      "label": "(N)"
                    },
                    {
                      "name": "14",
                      "type": "text",
                      "label": "(O)"
                    },
                    {
                      "name": "15",
                      "type": "text",
                      "label": "(P)"
                    },
                    {
                      "name": "16",
                      "type": "text",
                      "label": "(Q)"
                    },
                    {
                      "name": "17",
                      "type": "text",
                      "label": "(R)"
                    },
                    {
                      "name": "18",
                      "type": "text",
                      "label": "(S)"
                    },
                    {
                      "name": "19",
                      "type": "text",
                      "label": "(T)"
                    },
                    {
                      "name": "20",
                      "type": "text",
                      "label": "(U)"
                    },
                    {
                      "name": "21",
                      "type": "text",
                      "label": "(V)"
                    },
                    {
                      "name": "22",
                      "type": "text",
                      "label": "(W)"
                    },
                    {
                      "name": "23",
                      "type": "text",
                      "label": "(X)"
                    },
                    {
                      "name": "24",
                      "type": "text",
                      "label": "(Y)"
                    },
                    {
                      "name": "25",
                      "type": "text",
                      "label": "(Z)"
                    },
                    {
                      "name": "26",
                      "type": "text",
                      "label": "(AA)"
                    }
                  ],
                  "type": "collection",
                  "label": "Values"
                }
              ]
            },
            "insertDataOption": {
              "mode": "chose",
              "label": "Insert rows"
            },
            "valueInputOption": {
              "mode": "chose",
              "label": "User entered"
            },
            "insertUnformatted": {
              "mode": "chose"
            }
          },
          "parameters": {
            "__IMTCONN__": {
              "data": {
                "scoped": "true",
                "connection": "google"
              },
              "label": "daniel.ronai.mail@gmail.com (daniel.ronai.mail@gmail.com)"
            }
          }
        },
        "parameters": [
          {
            "name": "__IMTCONN__",
            "type": "account:google",
            "label": "Connection",
            "required": true
          }
        ],
        "expect": [
          {
            "name": "mode",
            "type": "select",
            "label": "Search Method",
            "required": true,
            "validate": {
              "enum": [
                "select",
                "fromAll",
                "map"
              ]
            }
          },
          {
            "name": "insertUnformatted",
            "type": "boolean",
            "label": "Unformatted",
            "required": true
          },
          {
            "name": "valueInputOption",
            "type": "select",
            "label": "Value input option",
            "validate": {
              "enum": [
                "USER_ENTERED",
                "RAW"
              ]
            }
          },
          {
            "name": "insertDataOption",
            "type": "select",
            "label": "Insert data option",
            "validate": {
              "enum": [
                "INSERT_ROWS",
                "OVERWRITE"
              ]
            }
          },
          {
            "name": "from",
            "type": "select",
            "label": "Drive",
            "required": true,
            "validate": {
              "enum": [
                "drive",
                "share",
                "team"
              ]
            }
          },
          {
            "name": "spreadsheetId",
            "type": "file",
            "label": "Spreadsheet ID",
            "required": true
          },
          {
            "name": "sheetId",
            "type": "select",
            "label": "Sheet Name",
            "required": true
          },
          {
            "name": "includesHeaders",
            "type": "select",
            "label": "Table contains headers",
            "required": true,
            "validate": {
              "enum": [
                true,
                false
              ]
            }
          },
          {
            "name": "values",
            "spec": [
              {
                "name": "0",
                "type": "text",
                "label": "Date (A)"
              },
              {
                "name": "1",
                "type": "text",
                "label": "Title (B)"
              },
              {
                "name": "2",
                "type": "text",
                "label": "length (C)"
              },
              {
                "name": "3",
                "type": "text",
                "label": "primary keyword (D)"
              },
              {
                "name": "4",
                "type": "text",
                "label": "secondary keywords (E)"
              },
              {
                "name": "5",
                "type": "text",
                "label": "internal links (F)"
              },
              {
                "name": "6",
                "type": "text",
                "label": "external links (G)"
              },
              {
                "name": "7",
                "type": "text",
                "label": "Additional ins (H)"
              },
              {
                "name": "8",
                "type": "text",
                "label": "(I)"
              },
              {
                "name": "9",
                "type": "text",
                "label": "(J)"
              },
              {
                "name": "10",
                "type": "text",
                "label": "(K)"
              },
              {
                "name": "11",
                "type": "text",
                "label": "(L)"
              },
              {
                "name": "12",
                "type": "text",
                "label": "(M)"
              },
              {
                "name": "13",
                "type": "text",
                "label": "(N)"
              },
              {
                "name": "14",
                "type": "text",
                "label": "(O)"
              },
              {
                "name": "15",
                "type": "text",
                "label": "(P)"
              },
              {
                "name": "16",
                "type": "text",
                "label": "(Q)"
              },
              {
                "name": "17",
                "type": "text",
                "label": "(R)"
              },
              {
                "name": "18",
                "type": "text",
                "label": "(S)"
              },
              {
                "name": "19",
                "type": "text",
                "label": "(T)"
              },
              {
                "name": "20",
                "type": "text",
                "label": "(U)"
              },
              {
                "name": "21",
                "type": "text",
                "label": "(V)"
              },
              {
                "name": "22",
                "type": "text",
                "label": "(W)"
              },
              {
                "name": "23",
                "type": "text",
                "label": "(X)"
              },
              {
                "name": "24",
                "type": "text",
                "label": "(Y)"
              },
              {
                "name": "25",
                "type": "text",
                "label": "(Z)"
              },
              {
                "name": "26",
                "type": "text",
                "label": "(AA)"
              }
            ],
            "type": "collection",
            "label": "Values"
          }
        ]
      }
    },
    {
      "id": 29,
      "module": "google-sheets:filterRows",
      "version": 2,
      "parameters": {
        "__IMTCONN__": 4086384
      },
      "mapper": {
        "from": "drive",
        "limit": "1",
        "orderBy": "__ROW_NUMBER__",
        "sheetId": "main sheet",
        "fieldType": "number",
        "sortOrder": "desc",
        "spreadsheetId": "1fOvGahayVd069wxb1QhA3US2br5kFM-fwVPjAZMvMSc",
        "tableFirstRow": "A1:CZ1",
        "includesHeaders": true,
        "valueRenderOption": "FORMATTED_VALUE",
        "dateTimeRenderOption": "FORMATTED_STRING"
      },
      "metadata": {
        "designer": {
          "x": -747,
          "y": -1194
        },
        "restore": {
          "expect": {
            "from": {
              "label": "Select from My Drive"
            },
            "orderBy": {
              "mode": "chose",
              "label": "Row number"
            },
            "sheetId": {
              "mode": "chose",
              "label": "main sheet"
            },
            "fieldType": {
              "mode": "chose",
              "label": "Number"
            },
            "sortOrder": {
              "mode": "chose",
              "label": "Descending"
            },
            "spreadsheetId": {
              "mode": "chose",
              "label": "Content generator spreadsheet"
            },
            "tableFirstRow": {
              "label": "A-CZ"
            },
            "includesHeaders": {
              "mode": "chose",
              "label": "Yes"
            },
            "valueRenderOption": {
              "mode": "chose",
              "label": "Formatted value"
            },
            "dateTimeRenderOption": {
              "mode": "chose",
              "label": "Formatted string"
            }
          },
          "parameters": {
            "__IMTCONN__": {
              "data": {
                "scoped": "true",
                "connection": "google"
              },
              "label": "daniel.ronai.mail@gmail.com (daniel.ronai.mail@gmail.com)"
            }
          }
        },
        "parameters": [
          {
            "name": "__IMTCONN__",
            "type": "account:google",
            "label": "Connection",
            "required": true
          }
        ],
        "expect": [
          {
            "name": "from",
            "type": "select",
            "label": "Search Method",
            "required": true,
            "validate": {
              "enum": [
                "drive",
                "share"
              ]
            }
          },
          {
            "name": "valueRenderOption",
            "type": "select",
            "label": "Value render option",
            "validate": {
              "enum": [
                "FORMATTED_VALUE",
                "UNFORMATTED_VALUE",
                "FORMULA"
              ]
            }
          },
          {
            "name": "dateTimeRenderOption",
            "type": "select",
            "label": "Date and time render option",
            "validate": {
              "enum": [
                "SERIAL_NUMBER",
                "FORMATTED_STRING"
              ]
            }
          },
          {
            "name": "limit",
            "type": "uinteger",
            "label": "Limit"
          },
          {
            "name": "spreadsheetId",
            "type": "select",
            "label": "Spreadsheet ID",
            "required": true
          },
          {
            "name": "sheetId",
            "type": "select",
            "label": "Sheet Name",
            "required": true
          },
          {
            "name": "includesHeaders",
            "type": "select",
            "label": "Table contains headers",
            "required": true,
            "validate": {
              "enum": [
                true,
                false
              ]
            }
          },
          {
            "name": "tableFirstRow",
            "type": "select",
            "label": "Column range",
            "required": true,
            "validate": {
              "enum": [
                "A1:Z1",
                "A1:BZ1",
                "A1:CZ1",
                "A1:DZ1",
                "A1:MZ1",
                "A1:ZZ1",
                "A1:AZZ1",
                "A1:BZZ1",
                "A1:CZZ1",
                "A1:DZZ1",
                "A1:MZZ1",
                "A1:ZZZ1"
              ]
            }
          },
          {
            "name": "filter",
            "type": "filter",
            "label": "Filter",
            "options": "rpc://google-sheets/2/rpcGetFilterKeys?includesHeaders=true"
          },
          {
            "name": "orderBy",
            "type": "select",
            "label": "Order by"
          },
          {
            "name": "sortOrder",
            "type": "select",
            "label": "Sort order",
            "validate": {
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "fieldType",
            "type": "select",
            "label": "Field Type",
            "validate": {
              "enum": [
                "string",
                "number",
                "date"
              ]
            }
          }
        ],
        "interface": [
          {
            "name": "__IMTLENGTH__",
            "type": "uinteger",
            "label": "Total number of bundles"
          },
          {
            "name": "__IMTINDEX__",
            "type": "uinteger",
            "label": "Bundle order position"
          },
          {
            "name": "__ROW_NUMBER__",
            "type": "number",
            "label": "Row number"
          },
          {
            "name": "__SPREADSHEET_ID__",
            "type": "text",
            "label": "Spreadsheet ID"
          },
          {
            "name": "__SHEET__",
            "type": "text",
            "label": "Sheet"
          },
          {
            "name": "0",
            "type": "text",
            "label": "Date (A)"
          },
          {
            "name": "1",
            "type": "text",
            "label": "Title (B)"
          },
          {
            "name": "2",
            "type": "text",
            "label": "length (C)"
          },
          {
            "name": "3",
            "type": "text",
            "label": "primary keyword (D)"
          },
          {
            "name": "4",
            "type": "text",
            "label": "secondary keywords (E)"
          },
          {
            "name": "5",
            "type": "text",
            "label": "internal links (F)"
          },
          {
            "name": "6",
            "type": "text",
            "label": "external links (G)"
          },
          {
            "name": "7",
            "type": "text",
            "label": "Additional ins (H)"
          },
          {
            "name": "8",
            "type": "text",
            "label": "(I)"
          },
          {
            "name": "9",
            "type": "text",
            "label": "(J)"
          },
          {
            "name": "10",
            "type": "text",
            "label": "(K)"
          },
          {
            "name": "11",
            "type": "text",
            "label": "(L)"
          },
          {
            "name": "12",
            "type": "text",
            "label": "(M)"
          },
          {
            "name": "13",
            "type": "text",
            "label": "(N)"
          },
          {
            "name": "14",
            "type": "text",
            "label": "(O)"
          },
          {
            "name": "15",
            "type": "text",
            "label": "(P)"
          },
          {
            "name": "16",
            "type": "text",
            "label": "(Q)"
          },
          {
            "name": "17",
            "type": "text",
            "label": "(R)"
          },
          {
            "name": "18",
            "type": "text",
            "label": "(S)"
          },
          {
            "name": "19",
            "type": "text",
            "label": "(T)"
          },
          {
            "name": "20",
            "type": "text",
            "label": "(U)"
          },
          {
            "name": "21",
            "type": "text",
            "label": "(V)"
          },
          {
            "name": "22",
            "type": "text",
            "label": "(W)"
          },
          {
            "name": "23",
            "type": "text",
            "label": "(X)"
          },
          {
            "name": "24",
            "type": "text",
            "label": "(Y)"
          },
          {
            "name": "25",
            "type": "text",
            "label": "(Z)"
          },
          {
            "name": "26",
            "type": "text",
            "label": "(AA)"
          },
          {
            "name": "27",
            "type": "text",
            "label": "(AB)"
          },
          {
            "name": "28",
            "type": "text",
            "label": "(AC)"
          },
          {
            "name": "29",
            "type": "text",
            "label": "(AD)"
          },
          {
            "name": "30",
            "type": "text",
            "label": "(AE)"
          },
          {
            "name": "31",
            "type": "text",
            "label": "(AF)"
          },
          {
            "name": "32",
            "type": "text",
            "label": "(AG)"
          },
          {
            "name": "33",
            "type": "text",
            "label": "(AH)"
          },
          {
            "name": "34",
            "type": "text",
            "label": "(AI)"
          },
          {
            "name": "35",
            "type": "text",
            "label": "(AJ)"
          },
          {
            "name": "36",
            "type": "text",
            "label": "(AK)"
          },
          {
            "name": "37",
            "type": "text",
            "label": "(AL)"
          },
          {
            "name": "38",
            "type": "text",
            "label": "(AM)"
          },
          {
            "name": "39",
            "type": "text",
            "label": "(AN)"
          },
          {
            "name": "40",
            "type": "text",
            "label": "(AO)"
          },
          {
            "name": "41",
            "type": "text",
            "label": "(AP)"
          },
          {
            "name": "42",
            "type": "text",
            "label": "(AQ)"
          },
          {
            "name": "43",
            "type": "text",
            "label": "(AR)"
          },
          {
            "name": "44",
            "type": "text",
            "label": "(AS)"
          },
          {
            "name": "45",
            "type": "text",
            "label": "(AT)"
          },
          {
            "name": "46",
            "type": "text",
            "label": "(AU)"
          },
          {
            "name": "47",
            "type": "text",
            "label": "(AV)"
          },
          {
            "name": "48",
            "type": "text",
            "label": "(AW)"
          },
          {
            "name": "49",
            "type": "text",
            "label": "(AX)"
          },
          {
            "name": "50",
            "type": "text",
            "label": "(AY)"
          },
          {
            "name": "51",
            "type": "text",
            "label": "(AZ)"
          },
          {
            "name": "52",
            "type": "text",
            "label": "(BA)"
          },
          {
            "name": "53",
            "type": "text",
            "label": "(BB)"
          },
          {
            "name": "54",
            "type": "text",
            "label": "(BC)"
          },
          {
            "name": "55",
            "type": "text",
            "label": "(BD)"
          },
          {
            "name": "56",
            "type": "text",
            "label": "(BE)"
          },
          {
            "name": "57",
            "type": "text",
            "label": "(BF)"
          },
          {
            "name": "58",
            "type": "text",
            "label": "(BG)"
          },
          {
            "name": "59",
            "type": "text",
            "label": "(BH)"
          },
          {
            "name": "60",
            "type": "text",
            "label": "(BI)"
          },
          {
            "name": "61",
            "type": "text",
            "label": "(BJ)"
          },
          {
            "name": "62",
            "type": "text",
            "label": "(BK)"
          },
          {
            "name": "63",
            "type": "text",
            "label": "(BL)"
          },
          {
            "name": "64",
            "type": "text",
            "label": "(BM)"
          },
          {
            "name": "65",
            "type": "text",
            "label": "(BN)"
          },
          {
            "name": "66",
            "type": "text",
            "label": "(BO)"
          },
          {
            "name": "67",
            "type": "text",
            "label": "(BP)"
          },
          {
            "name": "68",
            "type": "text",
            "label": "(BQ)"
          },
          {
            "name": "69",
            "type": "text",
            "label": "(BR)"
          },
          {
            "name": "70",
            "type": "text",
            "label": "(BS)"
          },
          {
            "name": "71",
            "type": "text",
            "label": "(BT)"
          },
          {
            "name": "72",
            "type": "text",
            "label": "(BU)"
          },
          {
            "name": "73",
            "type": "text",
            "label": "(BV)"
          },
          {
            "name": "74",
            "type": "text",
            "label": "(BW)"
          },
          {
            "name": "75",
            "type": "text",
            "label": "(BX)"
          },
          {
            "name": "76",
            "type": "text",
            "label": "(BY)"
          },
          {
            "name": "77",
            "type": "text",
            "label": "(BZ)"
          },
          {
            "name": "78",
            "type": "text",
            "label": "(CA)"
          },
          {
            "name": "79",
            "type": "text",
            "label": "(CB)"
          },
          {
            "name": "80",
            "type": "text",
            "label": "(CC)"
          },
          {
            "name": "81",
            "type": "text",
            "label": "(CD)"
          },
          {
            "name": "82",
            "type": "text",
            "label": "(CE)"
          },
          {
            "name": "83",
            "type": "text",
            "label": "(CF)"
          },
          {
            "name": "84",
            "type": "text",
            "label": "(CG)"
          },
          {
            "name": "85",
            "type": "text",
            "label": "(CH)"
          },
          {
            "name": "86",
            "type": "text",
            "label": "(CI)"
          },
          {
            "name": "87",
            "type": "text",
            "label": "(CJ)"
          },
          {
            "name": "88",
            "type": "text",
            "label": "(CK)"
          },
          {
            "name": "89",
            "type": "text",
            "label": "(CL)"
          },
          {
            "name": "90",
            "type": "text",
            "label": "(CM)"
          },
          {
            "name": "91",
            "type": "text",
            "label": "(CN)"
          },
          {
            "name": "92",
            "type": "text",
            "label": "(CO)"
          },
          {
            "name": "93",
            "type": "text",
            "label": "(CP)"
          },
          {
            "name": "94",
            "type": "text",
            "label": "(CQ)"
          },
          {
            "name": "95",
            "type": "text",
            "label": "(CR)"
          },
          {
            "name": "96",
            "type": "text",
            "label": "(CS)"
          },
          {
            "name": "97",
            "type": "text",
            "label": "(CT)"
          },
          {
            "name": "98",
            "type": "text",
            "label": "(CU)"
          },
          {
            "name": "99",
            "type": "text",
            "label": "(CV)"
          },
          {
            "name": "100",
            "type": "text",
            "label": "(CW)"
          },
          {
            "name": "101",
            "type": "text",
            "label": "(CX)"
          },
          {
            "name": "102",
            "type": "text",
            "label": "(CY)"
          },
          {
            "name": "103",
            "type": "text",
            "label": "(CZ)"
          }
        ]
      }
    },
    {
      "id": 30,
      "module": "util:SetVariables",
      "version": 1,
      "parameters": {},
      "mapper": {
        "scope": "roundtrip",
        "variables": [
          {
            "name": "title",
            "value": "{{29.`1`}}"
          },
          {
            "name": "wordCount",
            "value": "{{29.`2`}}"
          },
          {
            "name": "primaryKeyword",
            "value": "{{29.`3`}}"
          },
          {
            "name": "secondaryKeywords",
            "value": "{{if(contains(29.`4`; \",\"); split(29.`4`; \",\"); \"[\"\"\" + 29.`4` + \"\"\"]\")}}"
          },
          {
            "name": "internalLinks",
            "value": "{{if(contains(29.`5`; \",\"); split(29.`5`; \",\"); \"[\"\"\" + 29.`5` + \"\"\"]\")}}"
          },
          {
            "name": "externalLinks",
            "value": "{{if(contains(29.`6`; \",\"); split(29.`6`; \",\"); \"[\"\"\" + 29.`6` + \"\"\"]\")}}"
          },
          {
            "name": "additionalInstructions",
            "value": "{{29.`7`}}"
          }
        ]
      },
      "metadata": {
        "designer": {
          "x": -448,
          "y": -1191,
          "name": "Set Variables"
        },
        "restore": {
          "expect": {
            "scope": {
              "label": "One cycle"
            },
            "variables": {
              "items": [
                null,
                null,
                null,
                null,
                null,
                null,
                null
              ]
            }
          }
        },
        "expect": [
          {
            "name": "variables",
            "spec": [
              {
                "name": "name",
                "type": "text",
                "label": "Variable name",
                "required": true
              },
              {
                "name": "value",
                "type": "any",
                "label": "Variable value"
              }
            ],
            "type": "array",
            "label": "Variables"
          },
          {
            "name": "scope",
            "type": "select",
            "label": "Variable lifetime",
            "required": true,
            "validate": {
              "enum": [
                "roundtrip",
                "execution"
              ]
            }
          }
        ],
        "interface": [
          {
            "name": "title",
            "type": "any",
            "label": "title"
          },
          {
            "name": "wordCount",
            "type": "any",
            "label": "wordCount"
          },
          {
            "name": "primaryKeyword",
            "type": "any",
            "label": "primaryKeyword"
          },
          {
            "name": "secondaryKeywords",
            "type": "any",
            "label": "secondaryKeywords"
          },
          {
            "name": "internalLinks",
            "type": "any",
            "label": "internalLinks"
          },
          {
            "name": "externalLinks",
            "type": "any",
            "label": "externalLinks"
          },
          {
            "name": "additionalInstructions",
            "type": "any",
            "label": "additionalInstructions"
          }
        ]
      }
    },
    {
      "id": 6,
      "module": "openai-gpt-3:CreateCompletion",
      "version": 1,
      "parameters": {
        "__IMTCONN__": 2294275
      },
      "mapper": {
        "model": "gpt-4",
        "top_p": "1",
        "select": "chat",
        "messages": [
          {
            "role": "system",
            "content": "You're a helpful, intelligent writing assistant."
          },
          {
            "role": "user",
            "content": "Use the following JSON brief to write an engaging, comprehensive outline in Markdown format (atx). Tone of voice: 50% spartan, casual."
          },
          {
            "role": "user",
            "content": "{\n  \"title\": \"Accessibility in Retail: How to Make Your Store More Accessible\",\n  \"wordCount\": 1000,\n  \"primaryKeyword\": \"accessibility in retail\",\n  \"secondaryKeywords\": [\n    \"accessible e-commerce\",\n    \"how to make your website accessible\"\n  ],\n  \"internalLinks\": [\n    \"https://www.ontario.ca/page/how-make-websites-accessible\"\n  ],\n  \"externalLinks\": [\n    \"https://www.forbes.com/sites/forbesbusinesscouncil/2023/03/20/understanding-the-importance-of-web-accessibility/\"\n  ],\n  \"additionalInstructions\": \"Don't pitch the company at all - make it very informative and provide as much value as you can.\"\n}"
          },
          {
            "role": "assistant",
            "content": "# Accessibility in Retail: How to Make Your Store More Accessible\n\nOnline marketplaces have become increasingly popular since the mid-90s when retail juggernauts like Amazon initially burst onto the scene. And while it\u2019s true that nearly everybody buys products in e-commerce stores these days, it\u2019s crucial to understand that not all consumers have the same needs. \n\nOver one billion people have disabilities worldwide, meaning up to 15% of the global population may need assistive technology to use online shopping platforms. Addressing their needs is critical if you want to maximize your reach & customer experience.\n\nSo, how exactly does digital accessibility impact businesses, and what can we (practically) do about it? Read on for answers below.\n\n## Introduction\n\n- Briefly define what \"accessibility in retail\" means \n- Highlight the importance of retail accessibility.\n\n## The Significance of Accessibility in Retail\n\n- Discuss how creating an accessible retail space can broaden market reach \n- Discuss some benefits of retail accessibility. \n- Share valuable insights about retail accessibility from [\"Forbes\"](https://www.forbes.com/sites/forbesbusinesscouncil/2023/03/20/understanding-the-importance-of-web-accessibility/).\n\n## Exploring Accessible E-commerce: The New Normal in Retail \n\n- Explain the rise and importance of e-commerce in today's retail landscape. \n- Highlight how e-commerce has opened up more possibilities for accessibility in retail.\n\n## Guidelines to Make E-commerce Stores Accessible\n\n- Present some of the key accessibility standards for online stores.\n- Offer brief step-by-step guide on how to make your website accessible. \n- Indicate best practices in creating accessible e-commerce stores, citing resources from [\"Ontario.ca\"](https://www.ontario.ca/page/how-make-websites-accessible).\n\n## Physical Store Accessibility: Not to be Overlooked \n\n- Assert the need for physical store accessibility in addition to online stores.\n- Enumerate practical solutions for enhancing physical store accessibility.\n\n## Encouraging Continuous Efforts for Accessibility\n\n- Inspire readers to continually strive for better accessibility in their retail environments.\n- Reiterate the benefits of and the need for accessibility in the retail sector for a more inclusive future.\n\n## Conclusion\n\n- Summarize the key points and lessons learned about retail accessibility.\n- Encourage readers to implement the suggestions provided."
          },
          {
            "role": "user",
            "content": "{\n  \"title\": \"{{30.title}}\",\n  \"wordCount\": {{30.wordCount}},\n  \"primaryKeyword\": \"{{30.primaryKeyword}}\",\n  \"secondaryKeywords\":{{30.secondaryKeywords}},\n  \"internalLinks\":{{30.internalLinks}},\n  \"externalLinks\":{{30.externalLinks}},\n  \"additionalInstructions\": \"{{30.additionalInstructions}}\"\n}"
          }
        ],
        "max_tokens": "2048",
        "temperature": "1",
        "n_completions": "1",
        "response_format": "text"
      },
      "metadata": {
        "designer": {
          "x": -158,
          "y": -1190,
          "name": "Generate Outline"
        },
        "restore": {
          "expect": {
            "stop": {
              "mode": "chose"
            },
            "model": {
              "mode": "chose",
              "label": "gpt-4"
            },
            "select": {
              "label": "Create a Chat Completion (GPT and o1 models)"
            },
            "messages": {
              "mode": "chose",
              "items": [
                {
                  "role": {
                    "mode": "chose",
                    "label": "Developer / System"
                  }
                },
                {
                  "role": {
                    "mode": "chose",
                    "label": "User"
                  }
                },
                {
                  "role": {
                    "mode": "chose",
                    "label": "User"
                  }
                },
                {
                  "role": {
                    "mode": "chose",
                    "label": "Assistant"
                  },
                  "tool_calls": {
                    "mode": "edit"
                  }
                },
                {
                  "role": {
                    "mode": "chose",
                    "label": "User"
                  }
                }
              ]
            },
            "logit_bias": {
              "mode": "chose"
            },
            "tool_choice": {
              "mode": "chose",
              "label": "Empty"
            },
            "response_format": {
              "mode": "chose",
              "label": "Text"
            },
            "additionalParameters": {
              "mode": "chose"
            }
          },
          "parameters": {
            "__IMTCONN__": {
              "data": {
                "scoped": "true",
                "connection": "openai-gpt-3"
              },
              "label": "daniel.ronai.mail@gmail.com"
            }
          }
        },
        "parameters": [
          {
            "name": "__IMTCONN__",
            "type": "account:openai-gpt-3",
            "label": "Connection",
            "required": true
          }
        ],
        "expect": [
          {
            "name": "select",
            "type": "select",
            "label": "Select Method",
            "required": true,
            "validate": {
              "enum": [
                "chat",
                "prompt"
              ]
            }
          },
          {
            "name": "temperature",
            "type": "number",
            "label": "Temperature",
            "validate": {
              "max": 2,
              "min": 0
            }
          },
          {
            "name": "top_p",
            "type": "number",
            "label": "Top P",
            "validate": {
              "max": 1,
              "min": 0
            }
          },
          {
            "name": "n_completions",
            "type": "number",
            "label": "Number"
          },
          {
            "name": "frequency_penalty",
            "type": "number",
            "label": "Frequency Penalty",
            "validate": {
              "max": 2,
              "min": -2
            }
          },
          {
            "name": "presence_penalty",
            "type": "number",
            "label": "Presence Penalty",
            "validate": {
              "max": 2,
              "min": -2
            }
          },
          {
            "name": "logit_bias",
            "spec": {
              "name": "value",
              "spec": [
                {
                  "name": "token",
                  "type": "text",
                  "label": "Token ID",
                  "required": true
                },
                {
                  "name": "probability",
                  "type": "number",
                  "label": "Probability",
                  "required": true,
                  "validate": {
                    "max": 100,
                    "min": -100
                  }
                }
              ],
              "type": "collection",
              "label": "Token Probability"
            },
            "type": "array",
            "label": "Token Probability"
          },
          {
            "name": "seed",
            "type": "integer",
            "label": "Seed"
          },
          {
            "name": "tool_choice",
            "type": "select",
            "label": "Tool Choice",
            "validate": {
              "enum": [
                "none",
                "auto",
                "required"
              ]
            }
          },
          {
            "name": "stop",
            "spec": {
              "name": "value",
              "type": "text",
              "label": "Stop Sequence"
            },
            "type": "array",
            "label": "Stop Sequences",
            "validate": {
              "maxItems": 4
            }
          },
          {
            "name": "additionalParameters",
            "spec": {
              "name": "value",
              "spec": [
                {
                  "name": "key",
                  "type": "text",
                  "label": "Parameter Name",
                  "required": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "label": "Input Type",
                  "options": [
                    {
                      "label": "Text",
                      "value": "text",
                      "nested": [
                        {
                          "name": "value",
                          "type": "text",
                          "label": "Parameter Value"
                        }
                      ],
                      "default": true
                    },
                    {
                      "label": "Number",
                      "value": "number",
                      "nested": [
                        {
                          "name": "value",
                          "type": "number",
                          "label": "Parameter Value"
                        }
                      ]
                    },
                    {
                      "label": "Boolean",
                      "value": "boolean",
                      "nested": [
                        {
                          "name": "value",
                          "type": "boolean",
                          "label": "Parameter Value"
                        }
                      ]
                    },
                    {
                      "label": "Date",
                      "value": "date",
                      "nested": [
                        {
                          "name": "value",
                          "type": "date",
                          "label": "Parameter Value"
                        }
                      ]
                    },
                    {
                      "label": "Any",
                      "value": "any",
                      "nested": [
                        {
                          "name": "value",
                          "type": "any",
                          "label": "Parameter Value"
                        }
                      ]
                    }
                  ]
                }
              ],
              "type": "collection",
              "label": "Input Parameter"
            },
            "type": "array",
            "label": "Other Input Parameters"
          },
          {
            "name": "model",
            "type": "select",
            "label": "Model",
            "required": true
          },
          {
            "name": "max_tokens",
            "type": "uinteger",
            "label": "Max Completion Tokens"
          },
          {
            "name": "messages",
            "spec": {
              "name": "value",
              "spec": [
                {
                  "name": "role",
                  "type": "select",
                  "label": "Role",
                  "options": {
                    "store": [
                      {
                        "label": "User",
                        "value": "user",
                        "nested": [
                          {
                            "help": "Text content of the message on behalf of the selected __Role__.",
                            "name": "content",
                            "type": "text",
                            "label": "Text Content"
                          }
                        ]
                      },
                      {
                        "label": "Assistant",
                        "value": "assistant",
                        "nested": [
                          {
                            "help": "Text content of the message on behalf of the selected __Role__.",
                            "name": "content",
                            "type": "text",
                            "label": "Text Content"
                          },
                          {
                            "mode": "edit",
                            "name": "tool_calls",
                            "spec": {
                              "spec": [
                                {
                                  "name": "type",
                                  "type": "hidden",
                                  "default": "function"
                                },
                                {
                                  "help": "Map this directly from the output of a previous **Create a Completion** module. Look for `Choices[]: Message.Tool Calls[]: ID`.",
                                  "name": "id",
                                  "type": "text",
                                  "label": "Tool call ID"
                                },
                                {
                                  "name": "function",
                                  "spec": [
                                    {
                                      "help": "The name of the function previously called.",
                                      "name": "name",
                                      "type": "text",
                                      "label": "Name",
                                      "required": true
                                    },
                                    {
                                      "help": "The arguments previously output by the AI.",
                                      "name": "arguments",
                                      "type": "text",
                                      "label": "Arguments",
                                      "required": true
                                    }
                                  ],
                                  "type": "collection",
                                  "label": "Function"
                                }
                              ],
                              "type": "collection",
                              "label": "Tool Call"
                            },
                            "type": "array",
                            "label": "Tool Calls",
                            "labels": {
                              "add": "Add tool call"
                            },
                            "mappable": {
                              "help": "You can map the entire `Choices[]: Message.Tool Calls` array from a previous Create a Completion module here."
                            }
                          }
                        ]
                      },
                      {
                        "label": "Developer / System",
                        "value": "system",
                        "nested": [
                          {
                            "help": "Text content of the message on behalf of the selected __Role__.",
                            "name": "content",
                            "type": "text",
                            "label": "Text Content"
                          }
                        ]
                      },
                      {
                        "label": "Tool",
                        "value": "tool",
                        "nested": [
                          {
                            "help": "The return of the function. This role should only be used when you have processed a previous function call and want to send the output of the function execution back to the AI.",
                            "name": "content",
                            "type": "text",
                            "label": "Text Content",
                            "required": true
                          },
                          {
                            "help": "Map this directly from the output of a previous **Create a Completion** module. Look for `Choices[]: Message.Tool Calls[]: ID`.",
                            "name": "tool_call_id",
                            "type": "text",
                            "label": "Tool Call ID.",
                            "required": true
                          }
                        ]
                      }
                    ]
                  },
                  "required": true
                }
              ],
              "type": "collection",
              "label": "Message"
            },
            "type": "array",
            "label": "Messages",
            "required": true
          },
          {
            "name": "response_format",
            "type": "select",
            "label": "Response Format",
            "validate": {
              "enum": [
                "text",
                "json_object"
              ]
            }
          }
        ],
        "interface": [
          {
            "name": "result",
            "type": "any",
            "label": "Result"
          },
          {
            "name": "id",
            "type": "text",
            "label": "ID"
          },
          {
            "name": "object",
            "type": "text",
            "label": "Object"
          },
          {
            "name": "created",
            "type": "date",
            "label": "Created"
          },
          {
            "name": "model",
            "type": "text",
            "label": "Model"
          },
          {
            "name": "choices",
            "spec": [
              {
                "name": "text",
                "type": "text",
                "label": "Text"
              },
              {
                "name": "index",
                "type": "number",
                "label": "Index"
              },
              {
                "name": "logprobs",
                "type": "text",
                "label": "Log Probs"
              },
              {
                "name": "finish_reason",
                "type": "text",
                "label": "Finish Reason"
              },
              {
                "name": "message",
                "spec": [
                  {
                    "name": "role",
                    "type": "text",
                    "label": "Role"
                  },
                  {
                    "name": "content",
                    "type": "text",
                    "label": "Content"
                  },
                  {
                    "name": "tool_calls",
                    "spec": [
                      {
                        "name": "id",
                        "type": "text",
                        "label": "ID"
                      },
                      {
                        "name": "type",
                        "type": "text",
                        "label": "Type"
                      },
                      {
                        "name": "function",
                        "spec": [
                          {
                            "name": "name",
                            "type": "text",
                            "label": "Name"
                          },
                          {
                            "name": "arguments",
                            "type": "text",
                            "label": "Arguments"
                          }
                        ],
                        "type": "collection",
                        "label": "Function"
                      }
                    ],
                    "type": "array",
                    "label": "Tool Calls"
                  },
                  {
                    "name": "refusal",
                    "type": "text",
                    "label": "Refusal"
                  },
                  {
                    "name": "annotations",
                    "spec": [
                      {
                        "name": "type",
                        "type": "text",
                        "label": "Type"
                      },
                      {
                        "name": "url_citation",
                        "spec": [
                          {
                            "name": "end_index",
                            "type": "number",
                            "label": "End Index"
                          },
                          {
                            "name": "start_index",
                            "type": "number",
                            "label": "Start Index"
                          },
                          {
                            "name": "title",
                            "type": "text",
                            "label": "Title"
                          },
                          {
                            "name": "url",
                            "type": "text",
                            "label": "URL"
                          }
                        ],
                        "type": "collection",
                        "label": "URL Citation"
                      }
                    ],
                    "type": "array",
                    "label": "Annotations"
                  }
                ],
                "type": "collection",
                "label": "Message"
              }
            ],
            "type": "array",
            "label": "Choices"
          },
          {
            "name": "usage",
            "spec": [
              {
                "name": "prompt_tokens",
                "type": "number",
                "label": "Prompt Tokens"
              },
              {
                "name": "completion_tokens",
                "type": "text",
                "label": "Completion Tokens"
              },
              {
                "name": "total_tokens",
                "type": "number",
                "label": "Total Tokens"
              },
              {
                "name": "prompt_tokens_details",
                "spec": [
                  {
                    "name": "cached_tokens",
                    "type": "uinteger",
                    "label": "Cached Tokens"
                  },
                  {
                    "name": "text_tokens",
                    "type": "uinteger",
                    "label": "Text Tokens"
                  },
                  {
                    "name": "image_tokens",
                    "type": "uinteger",
                    "label": "Image Tokens"
                  },
                  {
                    "name": "audio_tokens",
                    "type": "uinteger",
                    "label": "Audio Tokens"
                  }
                ],
                "type": "collection",
                "label": "Prompt Tokens Details"
              },
              {
                "name": "completion_tokens_details",
                "spec": [
                  {
                    "name": "reasoning_tokens",
                    "type": "uinteger",
                    "label": "Reasoning Tokens"
                  },
                  {
                    "name": "text_tokens",
                    "type": "uinteger",
                    "label": "Text Tokens"
                  },
                  {
                    "name": "audio_tokens",
                    "type": "uinteger",
                    "label": "Audio Tokens"
                  },
                  {
                    "name": "accepted_prediction_tokens",
                    "type": "uinteger",
                    "label": "Accepted Prediction Tokens"
                  },
                  {
                    "name": "rejected_prediction_tokens",
                    "type": "uinteger",
                    "label": "Rejected Prediction Tokens"
                  }
                ],
                "type": "collection",
                "label": "Completion Tokens Details"
              }
            ],
            "type": "collection",
            "label": "Usage"
          },
          {
            "name": "service_tier",
            "type": "text",
            "label": "Service Tier"
          },
          {
            "name": "system_fingerprint",
            "type": "text",
            "label": "System Fingerprint"
          }
        ]
      },
      "onerror": [
        {
          "id": 7,
          "module": "builtin:Break",
          "version": 1,
          "parameters": {},
          "mapper": {
            "count": "3",
            "retry": true,
            "interval": "15"
          },
          "metadata": {
            "designer": {
              "x": -154,
              "y": -1451
            },
            "restore": {
              "expect": {
                "retry": {
                  "mode": "chose"
                }
              }
            },
            "expect": [
              {
                "name": "retry",
                "type": "boolean",
                "label": "Automatically complete execution",
                "required": true
              },
              {
                "name": "count",
                "type": "uinteger",
                "label": "Number of attempts",
                "required": true,
                "validate": {
                  "max": 10000,
                  "min": 1
                }
              },
              {
                "name": "interval",
                "type": "uinteger",
                "label": "Interval between attempts",
                "required": true,
                "validate": {
                  "max": 44640,
                  "min": 1
                }
              }
            ]
          }
        }
      ]
    },
    {
      "id": 8,
      "module": "markdown:Compile",
      "version": 2,
      "parameters": {},
      "mapper": {
        "gfm": true,
        "data": "{{6.choices[].message.content}}",
        "sanitize": false
      },
      "metadata": {
        "designer": {
          "x": 134,
          "y": -1185
        },
        "restore": {
          "expect": {
            "gfm": {
              "mode": "chose"
            },
            "sanitize": {
              "mode": "chose"
            }
          }
        },
        "expect": [
          {
            "name": "data",
            "type": "text",
            "label": "Markdown"
          },
          {
            "name": "gfm",
            "type": "boolean",
            "label": "GitHub Flavored Markdown",
            "required": true
          },
          {
            "name": "sanitize",
            "type": "boolean",
            "label": "Sanitize",
            "required": true
          }
        ],
        "advanced": true
      }
    },
    {
      "id": 9,
      "module": "google-docs:createADocument",
      "version": 1,
      "parameters": {
        "__IMTCONN__": 4086384
      },
      "mapper": {
        "name": "O: {{30.title}}",
        "footer": false,
        "header": false,
        "content": "{{8.data}}",
        "folderId": "/1HO-61Ooq0bLHTBs9luZVLuOXwIhOlcvj/1Gn8bJs0vEe6E23iSgnXpQnvPU7fF82D4",
        "destination": "drive"
      },
      "metadata": {
        "designer": {
          "x": 429,
          "y": -1185,
          "name": "Create Outline"
        },
        "restore": {
          "expect": {
            "folderId": {
              "mode": "chose",
              "path": [
                "Active Docs",
                "Content generator - outlines"
              ]
            },
            "destination": {
              "label": "My Drive"
            }
          },
          "parameters": {
            "__IMTCONN__": {
              "data": {
                "scoped": "true",
                "connection": "google"
              },
              "label": "daniel.ronai.mail@gmail.com (daniel.ronai.mail@gmail.com)"
            }
          }
        },
        "parameters": [
          {
            "name": "__IMTCONN__",
            "type": "account:google",
            "label": "Connection",
            "required": true
          }
        ],
        "expect": [
          {
            "name": "name",
            "type": "text",
            "label": "Name",
            "required": true
          },
          {
            "name": "content",
            "type": "text",
            "label": "Content",
            "required": true
          },
          {
            "name": "destination",
            "type": "select",
            "label": "Choose a Drive",
            "required": true,
            "validate": {
              "enum": [
                "drive",
                "share",
                "team"
              ]
            }
          },
          {
            "name": "header",
            "type": "boolean",
            "label": "Insert a Header",
            "required": true
          },
          {
            "name": "footer",
            "type": "boolean",
            "label": "Insert a Footer",
            "required": true
          },
          {
            "name": "folderId",
            "type": "folder",
            "label": "New Document's Location",
            "required": true
          }
        ]
      }
    },
    {
      "id": 11,
      "module": "util:SetVariable2",
      "version": 1,
      "parameters": {},
      "mapper": {
        "name": "inputBrief",
        "scope": "roundtrip",
        "value": "{{6.choices[].message.content}}"
      },
      "metadata": {
        "designer": {
          "x": 433,
          "y": -588,
          "name": "inputBrief"
        },
        "restore": {
          "expect": {
            "scope": {
              "label": "One cycle"
            }
          }
        },
        "expect": [
          {
            "name": "name",
            "type": "text",
            "label": "Variable name",
            "required": true
          },
          {
            "name": "scope",
            "type": "select",
            "label": "Variable lifetime",
            "required": true,
            "validate": {
              "enum": [
                "roundtrip",
                "execution"
              ]
            }
          },
          {
            "name": "value",
            "type": "any",
            "label": "Variable value"
          }
        ],
        "interface": [
          {
            "name": "inputBrief",
            "type": "any",
            "label": "inputBrief"
          }
        ]
      }
    },
    {
      "id": 12,
      "module": "builtin:BasicFeeder",
      "version": 1,
      "parameters": {},
      "mapper": {
        "array": "{{split(11.inputBrief; newline)}}"
      },
      "metadata": {
        "designer": {
          "x": 743,
          "y": -581
        },
        "restore": {
          "expect": {
            "array": {
              "mode": "edit"
            }
          }
        },
        "expect": [
          {
            "mode": "edit",
            "name": "array",
            "spec": [],
            "type": "array",
            "label": "Array"
          }
        ]
      }
    },
    {
      "id": 13,
      "module": "util:SetVariable2",
      "version": 1,
      "parameters": {},
      "filter": {
        "name": "Section Starts with ##",
        "conditions": [
          [
            {
              "a": "{{12.value}}",
              "b": "## ",
              "o": "text:startwith"
            }
          ]
        ]
      },
      "mapper": {
        "name": "sectionInput",
        "scope": "roundtrip",
        "value": "{{replace(11.inputBrief; 12.value; 12.value + \" <--\")}}"
      },
      "metadata": {
        "designer": {
          "x": 1112,
          "y": -583,
          "name": "Set sectionInput"
        },
        "restore": {
          "expect": {
            "scope": {
              "label": "One cycle"
            }
          }
        },
        "expect": [
          {
            "name": "name",
            "type": "text",
            "label": "Variable name",
            "required": true
          },
          {
            "name": "scope",
            "type": "select",
            "label": "Variable lifetime",
            "required": true,
            "validate": {
              "enum": [
                "roundtrip",
                "execution"
              ]
            }
          },
          {
            "name": "value",
            "type": "any",
            "label": "Variable value"
          }
        ],
        "interface": [
          {
            "name": "sectionInput",
            "type": "any",
            "label": "sectionInput"
          }
        ]
      }
    },
    {
      "id": 14,
      "module": "openai-gpt-3:CreateCompletion",
      "version": 1,
      "parameters": {
        "__IMTCONN__": 2294275
      },
      "mapper": {
        "model": "gpt-4",
        "top_p": "1",
        "select": "chat",
        "messages": [
          {
            "role": "system",
            "content": "You're a helpful, intelligent writing assistant."
          },
          {
            "role": "user",
            "content": "The following is an outline for an award-winning article. Your task is to write one section and one section only: the one marked by a \"<--\". Tone of voice: 50% spartan, casual.\n\n---\n\n{{13.sectionInput}}"
          }
        ],
        "max_tokens": "2048",
        "temperature": "1",
        "n_completions": "1",
        "response_format": "text"
      },
      "metadata": {
        "designer": {
          "x": 1447,
          "y": -583,
          "name": "Produce Section Text"
        },
        "restore": {
          "expect": {
            "stop": {
              "mode": "chose"
            },
            "model": {
              "mode": "chose",
              "label": "gpt-4"
            },
            "select": {
              "label": "Create a Chat Completion (GPT and o1 models)"
            },
            "messages": {
              "mode": "chose",
              "items": [
                {
                  "role": {
                    "mode": "chose",
                    "label": "Developer / System"
                  }
                },
                {
                  "role": {
                    "mode": "chose",
                    "label": "User"
                  }
                }
              ]
            },
            "logit_bias": {
              "mode": "chose"
            },
            "tool_choice": {
              "mode": "chose",
              "label": "Empty"
            },
            "response_format": {
              "mode": "chose",
              "label": "Text"
            },
            "additionalParameters": {
              "mode": "chose"
            }
          },
          "parameters": {
            "__IMTCONN__": {
              "data": {
                "scoped": "true",
                "connection": "openai-gpt-3"
              },
              "label": "daniel.ronai.mail@gmail.com"
            }
          }
        },
        "parameters": [
          {
            "name": "__IMTCONN__",
            "type": "account:openai-gpt-3",
            "label": "Connection",
            "required": true
          }
        ],
        "expect": [
          {
            "name": "select",
            "type": "select",
            "label": "Select Method",
            "required": true,
            "validate": {
              "enum": [
                "chat",
                "prompt"
              ]
            }
          },
          {
            "name": "temperature",
            "type": "number",
            "label": "Temperature",
            "validate": {
              "max": 2,
              "min": 0
            }
          },
          {
            "name": "top_p",
            "type": "number",
            "label": "Top P",
            "validate": {
              "max": 1,
              "min": 0
            }
          },
          {
            "name": "n_completions",
            "type": "number",
            "label": "Number"
          },
          {
            "name": "frequency_penalty",
            "type": "number",
            "label": "Frequency Penalty",
            "validate": {
              "max": 2,
              "min": -2
            }
          },
          {
            "name": "presence_penalty",
            "type": "number",
            "label": "Presence Penalty",
            "validate": {
              "max": 2,
              "min": -2
            }
          },
          {
            "name": "logit_bias",
            "spec": {
              "name": "value",
              "spec": [
                {
                  "name": "token",
                  "type": "text",
                  "label": "Token ID",
                  "required": true
                },
                {
                  "name": "probability",
                  "type": "number",
                  "label": "Probability",
                  "required": true,
                  "validate": {
                    "max": 100,
                    "min": -100
                  }
                }
              ],
              "type": "collection",
              "label": "Token Probability"
            },
            "type": "array",
            "label": "Token Probability"
          },
          {
            "name": "seed",
            "type": "integer",
            "label": "Seed"
          },
          {
            "name": "tool_choice",
            "type": "select",
            "label": "Tool Choice",
            "validate": {
              "enum": [
                "none",
                "auto",
                "required"
              ]
            }
          },
          {
            "name": "stop",
            "spec": {
              "name": "value",
              "type": "text",
              "label": "Stop Sequence"
            },
            "type": "array",
            "label": "Stop Sequences",
            "validate": {
              "maxItems": 4
            }
          },
          {
            "name": "additionalParameters",
            "spec": {
              "name": "value",
              "spec": [
                {
                  "name": "key",
                  "type": "text",
                  "label": "Parameter Name",
                  "required": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "label": "Input Type",
                  "options": [
                    {
                      "label": "Text",
                      "value": "text",
                      "nested": [
                        {
                          "name": "value",
                          "type": "text",
                          "label": "Parameter Value"
                        }
                      ],
                      "default": true
                    },
                    {
                      "label": "Number",
                      "value": "number",
                      "nested": [
                        {
                          "name": "value",
                          "type": "number",
                          "label": "Parameter Value"
                        }
                      ]
                    },
                    {
                      "label": "Boolean",
                      "value": "boolean",
                      "nested": [
                        {
                          "name": "value",
                          "type": "boolean",
                          "label": "Parameter Value"
                        }
                      ]
                    },
                    {
                      "label": "Date",
                      "value": "date",
                      "nested": [
                        {
                          "name": "value",
                          "type": "date",
                          "label": "Parameter Value"
                        }
                      ]
                    },
                    {
                      "label": "Any",
                      "value": "any",
                      "nested": [
                        {
                          "name": "value",
                          "type": "any",
                          "label": "Parameter Value"
                        }
                      ]
                    }
                  ]
                }
              ],
              "type": "collection",
              "label": "Input Parameter"
            },
            "type": "array",
            "label": "Other Input Parameters"
          },
          {
            "name": "model",
            "type": "select",
            "label": "Model",
            "required": true
          },
          {
            "name": "max_tokens",
            "type": "uinteger",
            "label": "Max Completion Tokens"
          },
          {
            "name": "messages",
            "spec": {
              "name": "value",
              "spec": [
                {
                  "name": "role",
                  "type": "select",
                  "label": "Role",
                  "options": {
                    "store": [
                      {
                        "label": "User",
                        "value": "user",
                        "nested": [
                          {
                            "help": "Text content of the message on behalf of the selected __Role__.",
                            "name": "content",
                            "type": "text",
                            "label": "Text Content"
                          }
                        ]
                      },
                      {
                        "label": "Assistant",
                        "value": "assistant",
                        "nested": [
                          {
                            "help": "Text content of the message on behalf of the selected __Role__.",
                            "name": "content",
                            "type": "text",
                            "label": "Text Content"
                          },
                          {
                            "mode": "edit",
                            "name": "tool_calls",
                            "spec": {
                              "spec": [
                                {
                                  "name": "type",
                                  "type": "hidden",
                                  "default": "function"
                                },
                                {
                                  "help": "Map this directly from the output of a previous **Create a Completion** module. Look for `Choices[]: Message.Tool Calls[]: ID`.",
                                  "name": "id",
                                  "type": "text",
                                  "label": "Tool call ID"
                                },
                                {
                                  "name": "function",
                                  "spec": [
                                    {
                                      "help": "The name of the function previously called.",
                                      "name": "name",
                                      "type": "text",
                                      "label": "Name",
                                      "required": true
                                    },
                                    {
                                      "help": "The arguments previously output by the AI.",
                                      "name": "arguments",
                                      "type": "text",
                                      "label": "Arguments",
                                      "required": true
                                    }
                                  ],
                                  "type": "collection",
                                  "label": "Function"
                                }
                              ],
                              "type": "collection",
                              "label": "Tool Call"
                            },
                            "type": "array",
                            "label": "Tool Calls",
                            "labels": {
                              "add": "Add tool call"
                            },
                            "mappable": {
                              "help": "You can map the entire `Choices[]: Message.Tool Calls` array from a previous Create a Completion module here."
                            }
                          }
                        ]
                      },
                      {
                        "label": "Developer / System",
                        "value": "system",
                        "nested": [
                          {
                            "help": "Text content of the message on behalf of the selected __Role__.",
                            "name": "content",
                            "type": "text",
                            "label": "Text Content"
                          }
                        ]
                      },
                      {
                        "label": "Tool",
                        "value": "tool",
                        "nested": [
                          {
                            "help": "The return of the function. This role should only be used when you have processed a previous function call and want to send the output of the function execution back to the AI.",
                            "name": "content",
                            "type": "text",
                            "label": "Text Content",
                            "required": true
                          },
                          {
                            "help": "Map this directly from the output of a previous **Create a Completion** module. Look for `Choices[]: Message.Tool Calls[]: ID`.",
                            "name": "tool_call_id",
                            "type": "text",
                            "label": "Tool Call ID.",
                            "required": true
                          }
                        ]
                      }
                    ]
                  },
                  "required": true
                }
              ],
              "type": "collection",
              "label": "Message"
            },
            "type": "array",
            "label": "Messages",
            "required": true
          },
          {
            "name": "response_format",
            "type": "select",
            "label": "Response Format",
            "validate": {
              "enum": [
                "text",
                "json_object"
              ]
            }
          }
        ],
        "interface": [
          {
            "name": "result",
            "type": "any",
            "label": "Result"
          },
          {
            "name": "id",
            "type": "text",
            "label": "ID"
          },
          {
            "name": "object",
            "type": "text",
            "label": "Object"
          },
          {
            "name": "created",
            "type": "date",
            "label": "Created"
          },
          {
            "name": "model",
            "type": "text",
            "label": "Model"
          },
          {
            "name": "choices",
            "spec": [
              {
                "name": "text",
                "type": "text",
                "label": "Text"
              },
              {
                "name": "index",
                "type": "number",
                "label": "Index"
              },
              {
                "name": "logprobs",
                "type": "text",
                "label": "Log Probs"
              },
              {
                "name": "finish_reason",
                "type": "text",
                "label": "Finish Reason"
              },
              {
                "name": "message",
                "spec": [
                  {
                    "name": "role",
                    "type": "text",
                    "label": "Role"
                  },
                  {
                    "name": "content",
                    "type": "text",
                    "label": "Content"
                  },
                  {
                    "name": "tool_calls",
                    "spec": [
                      {
                        "name": "id",
                        "type": "text",
                        "label": "ID"
                      },
                      {
                        "name": "type",
                        "type": "text",
                        "label": "Type"
                      },
                      {
                        "name": "function",
                        "spec": [
                          {
                            "name": "name",
                            "type": "text",
                            "label": "Name"
                          },
                          {
                            "name": "arguments",
                            "type": "text",
                            "label": "Arguments"
                          }
                        ],
                        "type": "collection",
                        "label": "Function"
                      }
                    ],
                    "type": "array",
                    "label": "Tool Calls"
                  },
                  {
                    "name": "refusal",
                    "type": "text",
                    "label": "Refusal"
                  },
                  {
                    "name": "annotations",
                    "spec": [
                      {
                        "name": "type",
                        "type": "text",
                        "label": "Type"
                      },
                      {
                        "name": "url_citation",
                        "spec": [
                          {
                            "name": "end_index",
                            "type": "number",
                            "label": "End Index"
                          },
                          {
                            "name": "start_index",
                            "type": "number",
                            "label": "Start Index"
                          },
                          {
                            "name": "title",
                            "type": "text",
                            "label": "Title"
                          },
                          {
                            "name": "url",
                            "type": "text",
                            "label": "URL"
                          }
                        ],
                        "type": "collection",
                        "label": "URL Citation"
                      }
                    ],
                    "type": "array",
                    "label": "Annotations"
                  }
                ],
                "type": "collection",
                "label": "Message"
              }
            ],
            "type": "array",
            "label": "Choices"
          },
          {
            "name": "usage",
            "spec": [
              {
                "name": "prompt_tokens",
                "type": "number",
                "label": "Prompt Tokens"
              },
              {
                "name": "completion_tokens",
                "type": "text",
                "label": "Completion Tokens"
              },
              {
                "name": "total_tokens",
                "type": "number",
                "label": "Total Tokens"
              },
              {
                "name": "prompt_tokens_details",
                "spec": [
                  {
                    "name": "cached_tokens",
                    "type": "uinteger",
                    "label": "Cached Tokens"
                  },
                  {
                    "name": "text_tokens",
                    "type": "uinteger",
                    "label": "Text Tokens"
                  },
                  {
                    "name": "image_tokens",
                    "type": "uinteger",
                    "label": "Image Tokens"
                  },
                  {
                    "name": "audio_tokens",
                    "type": "uinteger",
                    "label": "Audio Tokens"
                  }
                ],
                "type": "collection",
                "label": "Prompt Tokens Details"
              },
              {
                "name": "completion_tokens_details",
                "spec": [
                  {
                    "name": "reasoning_tokens",
                    "type": "uinteger",
                    "label": "Reasoning Tokens"
                  },
                  {
                    "name": "text_tokens",
                    "type": "uinteger",
                    "label": "Text Tokens"
                  },
                  {
                    "name": "audio_tokens",
                    "type": "uinteger",
                    "label": "Audio Tokens"
                  },
                  {
                    "name": "accepted_prediction_tokens",
                    "type": "uinteger",
                    "label": "Accepted Prediction Tokens"
                  },
                  {
                    "name": "rejected_prediction_tokens",
                    "type": "uinteger",
                    "label": "Rejected Prediction Tokens"
                  }
                ],
                "type": "collection",
                "label": "Completion Tokens Details"
              }
            ],
            "type": "collection",
            "label": "Usage"
          },
          {
            "name": "service_tier",
            "type": "text",
            "label": "Service Tier"
          },
          {
            "name": "system_fingerprint",
            "type": "text",
            "label": "System Fingerprint"
          }
        ]
      },
      "onerror": [
        {
          "id": 15,
          "module": "builtin:Break",
          "version": 1,
          "parameters": {},
          "mapper": {
            "count": "3",
            "retry": true,
            "interval": "15"
          },
          "metadata": {
            "designer": {
              "x": 1451,
              "y": -857
            },
            "restore": {
              "expect": {
                "retry": {
                  "mode": "chose"
                }
              }
            },
            "expect": [
              {
                "name": "retry",
                "type": "boolean",
                "label": "Automatically complete execution",
                "required": true
              },
              {
                "name": "count",
                "type": "uinteger",
                "label": "Number of attempts",
                "required": true,
                "validate": {
                  "max": 10000,
                  "min": 1
                }
              },
              {
                "name": "interval",
                "type": "uinteger",
                "label": "Interval between attempts",
                "required": true,
                "validate": {
                  "max": 44640,
                  "min": 1
                }
              }
            ]
          }
        }
      ]
    },
    {
      "id": 16,
      "module": "util:SetVariable2",
      "version": 1,
      "parameters": {},
      "mapper": {
        "name": "sectionText",
        "scope": "roundtrip",
        "value": "{{14.choices[].message.content}}"
      },
      "metadata": {
        "designer": {
          "x": 1739,
          "y": -581,
          "name": "sectionText"
        },
        "restore": {
          "expect": {
            "scope": {
              "label": "One cycle"
            }
          }
        },
        "expect": [
          {
            "name": "name",
            "type": "text",
            "label": "Variable name",
            "required": true
          },
          {
            "name": "scope",
            "type": "select",
            "label": "Variable lifetime",
            "required": true,
            "validate": {
              "enum": [
                "roundtrip",
                "execution"
              ]
            }
          },
          {
            "name": "value",
            "type": "any",
            "label": "Variable value"
          }
        ],
        "interface": [
          {
            "name": "sectionText",
            "type": "any",
            "label": "sectionText"
          }
        ]
      }
    },
    {
      "id": 17,
      "module": "builtin:BasicRouter",
      "version": 1,
      "mapper": null,
      "metadata": {
        "designer": {
          "x": 2025,
          "y": -582
        }
      },
      "routes": [
        {
          "flow": [
            {
              "id": 18,
              "module": "openai-gpt-3:CreateCompletion",
              "version": 1,
              "parameters": {
                "__IMTCONN__": 2294275
              },
              "filter": {
                "name": "25%",
                "conditions": [
                  [
                    {
                      "a": "{{floor(random * (4)) + 1}}",
                      "b": "3",
                      "o": "number:equal"
                    }
                  ]
                ]
              },
              "mapper": {
                "model": "gpt-4",
                "top_p": "1",
                "select": "chat",
                "messages": [
                  {
                    "role": "system",
                    "content": "You're a helpful, intelligent writing assistant."
                  },
                  {
                    "role": "user",
                    "content": "Edit the following text to break up the flow. Add bullet points and subheadings where needed for variety. Use Markdown (atx) format."
                  },
                  {
                    "role": "user",
                    "content": "## Making Use of AI Writing Tools\n\nIncorporating AI into your writing workflow requires a strong understanding of the available tools and how they can boost your productivity. Whether you're a novella writer looking to streamline your plot development process or a content marketer aiming to optimize your SEO, various AI writing tools are at your disposal.\n\nAmong the most versatile AI writing tools is ChatGPT, designed by OpenAI. This tool is designed to assist with content generation, ideation, formatting, and even translation - enabling you to create everything from a creative blog post to a professional report. Thanks to its machine learning capabilities, the quality of the content it helps you generate even improves over time based on your input and feedback.\n\nFor those primarily concerned with editing and proofreading, tools like Grammarly and ProWritingAid are invaluable. Using AI algorithms, these tools assess your writing for grammatical errors, readability, and more, helping you polish your content to perfection."
                  },
                  {
                    "role": "assistant",
                    "content": "## Making Use of AI Writing Tools\n\nIncorporating AI into your writing workflow requires a strong understanding of the available tools and how they can boost your productivity. Whether you're a novella writer looking to streamline your plot development process or a content marketer aiming to optimize your SEO, below are a few of the hottest AI tools you can use to improve your productivity.\n\n### AI Writing Tools\n\nAmong the most versatile AI writing tools is ChatGPT, designed by OpenAI. This tool is designed to assist with:\n- Content generation,\n- Ideation,\n- Automatic formatting, &\n- Translation\n\nThanks to its machine learning capabilities, the quality of the content it helps you generate even improves over time based on your input and feedback.\n\n## AI Editing Tools\n\nFor those primarily concerned with editing and proofreading, on the other hand, here are a few high-quality tools you can use to skip the QA.\n- Grammarly, \n- ProWritingAid,\n\nUsing natural language processing, these tools instantly assess your writing for grammatical errors, readability, and more, helping you polish your content to perfection."
                  },
                  {
                    "role": "user",
                    "content": "{{14.choices[].message.content}}"
                  }
                ],
                "max_tokens": "2048",
                "temperature": "1",
                "n_completions": "1",
                "response_format": "text"
              },
              "metadata": {
                "designer": {
                  "x": 2326,
                  "y": -845,
                  "name": "Produce Section Text"
                },
                "restore": {
                  "expect": {
                    "stop": {
                      "mode": "chose"
                    },
                    "model": {
                      "mode": "chose",
                      "label": "gpt-4"
                    },
                    "select": {
                      "label": "Create a Chat Completion (GPT and o1 models)"
                    },
                    "messages": {
                      "mode": "chose",
                      "items": [
                        {
                          "role": {
                            "mode": "chose",
                            "label": "Developer / System"
                          }
                        },
                        {
                          "role": {
                            "mode": "chose",
                            "label": "User"
                          }
                        },
                        {
                          "role": {
                            "mode": "chose",
                            "label": "User"
                          }
                        },
                        {
                          "role": {
                            "mode": "chose",
                            "label": "Assistant"
                          },
                          "tool_calls": {
                            "mode": "edit"
                          }
                        },
                        {
                          "role": {
                            "mode": "chose",
                            "label": "User"
                          }
                        }
                      ]
                    },
                    "logit_bias": {
                      "mode": "chose"
                    },
                    "tool_choice": {
                      "mode": "chose",
                      "label": "Empty"
                    },
                    "response_format": {
                      "mode": "chose",
                      "label": "Text"
                    },
                    "additionalParameters": {
                      "mode": "chose"
                    }
                  },
                  "parameters": {
                    "__IMTCONN__": {
                      "data": {
                        "scoped": "true",
                        "connection": "openai-gpt-3"
                      },
                      "label": "daniel.ronai.mail@gmail.com"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "__IMTCONN__",
                    "type": "account:openai-gpt-3",
                    "label": "Connection",
                    "required": true
                  }
                ],
                "expect": [
                  {
                    "name": "select",
                    "type": "select",
                    "label": "Select Method",
                    "required": true,
                    "validate": {
                      "enum": [
                        "chat",
                        "prompt"
                      ]
                    }
                  },
                  {
                    "name": "temperature",
                    "type": "number",
                    "label": "Temperature",
                    "validate": {
                      "max": 2,
                      "min": 0
                    }
                  },
                  {
                    "name": "top_p",
                    "type": "number",
                    "label": "Top P",
                    "validate": {
                      "max": 1,
                      "min": 0
                    }
                  },
                  {
                    "name": "n_completions",
                    "type": "number",
                    "label": "Number"
                  },
                  {
                    "name": "frequency_penalty",
                    "type": "number",
                    "label": "Frequency Penalty",
                    "validate": {
                      "max": 2,
                      "min": -2
                    }
                  },
                  {
                    "name": "presence_penalty",
                    "type": "number",
                    "label": "Presence Penalty",
                    "validate": {
                      "max": 2,
                      "min": -2
                    }
                  },
                  {
                    "name": "logit_bias",
                    "spec": {
                      "name": "value",
                      "spec": [
                        {
                          "name": "token",
                          "type": "text",
                          "label": "Token ID",
                          "required": true
                        },
                        {
                          "name": "probability",
                          "type": "number",
                          "label": "Probability",
                          "required": true,
                          "validate": {
                            "max": 100,
                            "min": -100
                          }
                        }
                      ],
                      "type": "collection",
                      "label": "Token Probability"
                    },
                    "type": "array",
                    "label": "Token Probability"
                  },
                  {
                    "name": "seed",
                    "type": "integer",
                    "label": "Seed"
                  },
                  {
                    "name": "tool_choice",
                    "type": "select",
                    "label": "Tool Choice",
                    "validate": {
                      "enum": [
                        "none",
                        "auto",
                        "required"
                      ]
                    }
                  },
                  {
                    "name": "stop",
                    "spec": {
                      "name": "value",
                      "type": "text",
                      "label": "Stop Sequence"
                    },
                    "type": "array",
                    "label": "Stop Sequences",
                    "validate": {
                      "maxItems": 4
                    }
                  },
                  {
                    "name": "additionalParameters",
                    "spec": {
                      "name": "value",
                      "spec": [
                        {
                          "name": "key",
                          "type": "text",
                          "label": "Parameter Name",
                          "required": true
                        },
                        {
                          "name": "type",
                          "type": "select",
                          "label": "Input Type",
                          "options": [
                            {
                              "label": "Text",
                              "value": "text",
                              "nested": [
                                {
                                  "name": "value",
                                  "type": "text",
                                  "label": "Parameter Value"
                                }
                              ],
                              "default": true
                            },
                            {
                              "label": "Number",
                              "value": "number",
                              "nested": [
                                {
                                  "name": "value",
                                  "type": "number",
                                  "label": "Parameter Value"
                                }
                              ]
                            },
                            {
                              "label": "Boolean",
                              "value": "boolean",
                              "nested": [
                                {
                                  "name": "value",
                                  "type": "boolean",
                                  "label": "Parameter Value"
                                }
                              ]
                            },
                            {
                              "label": "Date",
                              "value": "date",
                              "nested": [
                                {
                                  "name": "value",
                                  "type": "date",
                                  "label": "Parameter Value"
                                }
                              ]
                            },
                            {
                              "label": "Any",
                              "value": "any",
                              "nested": [
                                {
                                  "name": "value",
                                  "type": "any",
                                  "label": "Parameter Value"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "collection",
                      "label": "Input Parameter"
                    },
                    "type": "array",
                    "label": "Other Input Parameters"
                  },
                  {
                    "name": "model",
                    "type": "select",
                    "label": "Model",
                    "required": true
                  },
                  {
                    "name": "max_tokens",
                    "type": "uinteger",
                    "label": "Max Completion Tokens"
                  },
                  {
                    "name": "messages",
                    "spec": {
                      "name": "value",
                      "spec": [
                        {
                          "name": "role",
                          "type": "select",
                          "label": "Role",
                          "options": {
                            "store": [
                              {
                                "label": "User",
                                "value": "user",
                                "nested": [
                                  {
                                    "help": "Text content of the message on behalf of the selected __Role__.",
                                    "name": "content",
                                    "type": "text",
                                    "label": "Text Content"
                                  }
                                ]
                              },
                              {
                                "label": "Assistant",
                                "value": "assistant",
                                "nested": [
                                  {
                                    "help": "Text content of the message on behalf of the selected __Role__.",
                                    "name": "content",
                                    "type": "text",
                                    "label": "Text Content"
                                  },
                                  {
                                    "mode": "edit",
                                    "name": "tool_calls",
                                    "spec": {
                                      "spec": [
                                        {
                                          "name": "type",
                                          "type": "hidden",
                                          "default": "function"
                                        },
                                        {
                                          "help": "Map this directly from the output of a previous **Create a Completion** module. Look for `Choices[]: Message.Tool Calls[]: ID`.",
                                          "name": "id",
                                          "type": "text",
                                          "label": "Tool call ID"
                                        },
                                        {
                                          "name": "function",
                                          "spec": [
                                            {
                                              "help": "The name of the function previously called.",
                                              "name": "name",
                                              "type": "text",
                                              "label": "Name",
                                              "required": true
                                            },
                                            {
                                              "help": "The arguments previously output by the AI.",
                                              "name": "arguments",
                                              "type": "text",
                                              "label": "Arguments",
                                              "required": true
                                            }
                                          ],
                                          "type": "collection",
                                          "label": "Function"
                                        }
                                      ],
                                      "type": "collection",
                                      "label": "Tool Call"
                                    },
                                    "type": "array",
                                    "label": "Tool Calls",
                                    "labels": {
                                      "add": "Add tool call"
                                    },
                                    "mappable": {
                                      "help": "You can map the entire `Choices[]: Message.Tool Calls` array from a previous Create a Completion module here."
                                    }
                                  }
                                ]
                              },
                              {
                                "label": "Developer / System",
                                "value": "system",
                                "nested": [
                                  {
                                    "help": "Text content of the message on behalf of the selected __Role__.",
                                    "name": "content",
                                    "type": "text",
                                    "label": "Text Content"
                                  }
                                ]
                              },
                              {
                                "label": "Tool",
                                "value": "tool",
                                "nested": [
                                  {
                                    "help": "The return of the function. This role should only be used when you have processed a previous function call and want to send the output of the function execution back to the AI.",
                                    "name": "content",
                                    "type": "text",
                                    "label": "Text Content",
                                    "required": true
                                  },
                                  {
                                    "help": "Map this directly from the output of a previous **Create a Completion** module. Look for `Choices[]: Message.Tool Calls[]: ID`.",
                                    "name": "tool_call_id",
                                    "type": "text",
                                    "label": "Tool Call ID.",
                                    "required": true
                                  }
                                ]
                              }
                            ]
                          },
                          "required": true
                        }
                      ],
                      "type": "collection",
                      "label": "Message"
                    },
                    "type": "array",
                    "label": "Messages",
                    "required": true
                  },
                  {
                    "name": "response_format",
                    "type": "select",
                    "label": "Response Format",
                    "validate": {
                      "enum": [
                        "text",
                        "json_object"
                      ]
                    }
                  }
                ],
                "interface": [
                  {
                    "name": "result",
                    "type": "any",
                    "label": "Result"
                  },
                  {
                    "name": "id",
                    "type": "text",
                    "label": "ID"
                  },
                  {
                    "name": "object",
                    "type": "text",
                    "label": "Object"
                  },
                  {
                    "name": "created",
                    "type": "date",
                    "label": "Created"
                  },
                  {
                    "name": "model",
                    "type": "text",
                    "label": "Model"
                  },
                  {
                    "name": "choices",
                    "spec": [
                      {
                        "name": "text",
                        "type": "text",
                        "label": "Text"
                      },
                      {
                        "name": "index",
                        "type": "number",
                        "label": "Index"
                      },
                      {
                        "name": "logprobs",
                        "type": "text",
                        "label": "Log Probs"
                      },
                      {
                        "name": "finish_reason",
                        "type": "text",
                        "label": "Finish Reason"
                      },
                      {
                        "name": "message",
                        "spec": [
                          {
                            "name": "role",
                            "type": "text",
                            "label": "Role"
                          },
                          {
                            "name": "content",
                            "type": "text",
                            "label": "Content"
                          },
                          {
                            "name": "tool_calls",
                            "spec": [
                              {
                                "name": "id",
                                "type": "text",
                                "label": "ID"
                              },
                              {
                                "name": "type",
                                "type": "text",
                                "label": "Type"
                              },
                              {
                                "name": "function",
                                "spec": [
                                  {
                                    "name": "name",
                                    "type": "text",
                                    "label": "Name"
                                  },
                                  {
                                    "name": "arguments",
                                    "type": "text",
                                    "label": "Arguments"
                                  }
                                ],
                                "type": "collection",
                                "label": "Function"
                              }
                            ],
                            "type": "array",
                            "label": "Tool Calls"
                          },
                          {
                            "name": "refusal",
                            "type": "text",
                            "label": "Refusal"
                          },
                          {
                            "name": "annotations",
                            "spec": [
                              {
                                "name": "type",
                                "type": "text",
                                "label": "Type"
                              },
                              {
                                "name": "url_citation",
                                "spec": [
                                  {
                                    "name": "end_index",
                                    "type": "number",
                                    "label": "End Index"
                                  },
                                  {
                                    "name": "start_index",
                                    "type": "number",
                                    "label": "Start Index"
                                  },
                                  {
                                    "name": "title",
                                    "type": "text",
                                    "label": "Title"
                                  },
                                  {
                                    "name": "url",
                                    "type": "text",
                                    "label": "URL"
                                  }
                                ],
                                "type": "collection",
                                "label": "URL Citation"
                              }
                            ],
                            "type": "array",
                            "label": "Annotations"
                          }
                        ],
                        "type": "collection",
                        "label": "Message"
                      }
                    ],
                    "type": "array",
                    "label": "Choices"
                  },
                  {
                    "name": "usage",
                    "spec": [
                      {
                        "name": "prompt_tokens",
                        "type": "number",
                        "label": "Prompt Tokens"
                      },
                      {
                        "name": "completion_tokens",
                        "type": "text",
                        "label": "Completion Tokens"
                      },
                      {
                        "name": "total_tokens",
                        "type": "number",
                        "label": "Total Tokens"
                      },
                      {
                        "name": "prompt_tokens_details",
                        "spec": [
                          {
                            "name": "cached_tokens",
                            "type": "uinteger",
                            "label": "Cached Tokens"
                          },
                          {
                            "name": "text_tokens",
                            "type": "uinteger",
                            "label": "Text Tokens"
                          },
                          {
                            "name": "image_tokens",
                            "type": "uinteger",
                            "label": "Image Tokens"
                          },
                          {
                            "name": "audio_tokens",
                            "type": "uinteger",
                            "label": "Audio Tokens"
                          }
                        ],
                        "type": "collection",
                        "label": "Prompt Tokens Details"
                      },
                      {
                        "name": "completion_tokens_details",
                        "spec": [
                          {
                            "name": "reasoning_tokens",
                            "type": "uinteger",
                            "label": "Reasoning Tokens"
                          },
                          {
                            "name": "text_tokens",
                            "type": "uinteger",
                            "label": "Text Tokens"
                          },
                          {
                            "name": "audio_tokens",
                            "type": "uinteger",
                            "label": "Audio Tokens"
                          },
                          {
                            "name": "accepted_prediction_tokens",
                            "type": "uinteger",
                            "label": "Accepted Prediction Tokens"
                          },
                          {
                            "name": "rejected_prediction_tokens",
                            "type": "uinteger",
                            "label": "Rejected Prediction Tokens"
                          }
                        ],
                        "type": "collection",
                        "label": "Completion Tokens Details"
                      }
                    ],
                    "type": "collection",
                    "label": "Usage"
                  },
                  {
                    "name": "service_tier",
                    "type": "text",
                    "label": "Service Tier"
                  },
                  {
                    "name": "system_fingerprint",
                    "type": "text",
                    "label": "System Fingerprint"
                  }
                ]
              },
              "onerror": [
                {
                  "id": 19,
                  "module": "builtin:Break",
                  "version": 1,
                  "parameters": {},
                  "mapper": {
                    "count": "3",
                    "retry": true,
                    "interval": "15"
                  },
                  "metadata": {
                    "designer": {
                      "x": 2326,
                      "y": -1094
                    },
                    "restore": {
                      "expect": {
                        "retry": {
                          "mode": "chose"
                        }
                      }
                    },
                    "expect": [
                      {
                        "name": "retry",
                        "type": "boolean",
                        "label": "Automatically complete execution",
                        "required": true
                      },
                      {
                        "name": "count",
                        "type": "uinteger",
                        "label": "Number of attempts",
                        "required": true,
                        "validate": {
                          "max": 10000,
                          "min": 1
                        }
                      },
                      {
                        "name": "interval",
                        "type": "uinteger",
                        "label": "Interval between attempts",
                        "required": true,
                        "validate": {
                          "max": 44640,
                          "min": 1
                        }
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 20,
              "module": "util:SetVariable2",
              "version": 1,
              "parameters": {},
              "mapper": {
                "name": "sectionText",
                "scope": "roundtrip",
                "value": "{{18.choices[].message.content}}"
              },
              "metadata": {
                "designer": {
                  "x": 2620,
                  "y": -846,
                  "name": "sectionText"
                },
                "restore": {
                  "expect": {
                    "scope": {
                      "label": "One cycle"
                    }
                  }
                },
                "expect": [
                  {
                    "name": "name",
                    "type": "text",
                    "label": "Variable name",
                    "required": true
                  },
                  {
                    "name": "scope",
                    "type": "select",
                    "label": "Variable lifetime",
                    "required": true,
                    "validate": {
                      "enum": [
                        "roundtrip",
                        "execution"
                      ]
                    }
                  },
                  {
                    "name": "value",
                    "type": "any",
                    "label": "Variable value"
                  }
                ],
                "interface": [
                  {
                    "name": "sectionText",
                    "type": "any",
                    "label": "sectionText"
                  }
                ]
              }
            }
          ]
        },
        {
          "flow": [
            {
              "id": 21,
              "module": "util:GetVariable2",
              "version": 1,
              "parameters": {},
              "mapper": {
                "name": "sectionText"
              },
              "metadata": {
                "designer": {
                  "x": 2323,
                  "y": -578,
                  "name": "Get sectionText"
                },
                "restore": {},
                "expect": [
                  {
                    "name": "name",
                    "type": "text",
                    "label": "Variable name",
                    "required": true
                  }
                ],
                "interface": [
                  {
                    "name": "sectionText",
                    "type": "any",
                    "label": "sectionText"
                  }
                ]
              }
            },
            {
              "id": 22,
              "module": "util:TextAggregator",
              "version": 1,
              "parameters": {
                "feeder": 12,
                "rowSeparator": "\n"
              },
              "mapper": {
                "value": "{{21.sectionText}}"
              },
              "metadata": {
                "designer": {
                  "x": 2616,
                  "y": -580,
                  "name": "Aggregate Section Text"
                },
                "restore": {
                  "extra": {
                    "feeder": {
                      "label": "Iterator [13]"
                    }
                  },
                  "parameters": {
                    "rowSeparator": {
                      "label": "New row"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "rowSeparator",
                    "type": "select",
                    "label": "Row separator",
                    "validate": {
                      "enum": [
                        "\n",
                        "\t",
                        "other"
                      ]
                    }
                  }
                ],
                "expect": [
                  {
                    "name": "value",
                    "type": "text",
                    "label": "Text"
                  }
                ],
                "advanced": true
              }
            },
            {
              "id": 23,
              "module": "markdown:Compile",
              "version": 2,
              "parameters": {},
              "mapper": {
                "gfm": true,
                "data": "{{get(split(11.inputBrief; \"##\"); 1)}}\n\n{{22.text}}",
                "sanitize": false
              },
              "metadata": {
                "designer": {
                  "x": 2910,
                  "y": -581
                },
                "restore": {
                  "expect": {
                    "gfm": {
                      "mode": "chose"
                    },
                    "sanitize": {
                      "mode": "chose"
                    }
                  }
                },
                "expect": [
                  {
                    "name": "data",
                    "type": "text",
                    "label": "Markdown"
                  },
                  {
                    "name": "gfm",
                    "type": "boolean",
                    "label": "GitHub Flavored Markdown",
                    "required": true
                  },
                  {
                    "name": "sanitize",
                    "type": "boolean",
                    "label": "Sanitize",
                    "required": true
                  }
                ],
                "advanced": true
              }
            },
            {
              "id": 24,
              "module": "google-docs:createADocument",
              "version": 1,
              "parameters": {
                "__IMTCONN__": 4086384
              },
              "mapper": {
                "name": "A: {{30.title}}",
                "footer": false,
                "header": false,
                "content": "{{23.data}}",
                "folderId": "/1HO-61Ooq0bLHTBs9luZVLuOXwIhOlcvj/1KbkB4i_a3GRSHjQ9jUGXhMCjokQ1-YXO",
                "destination": "drive"
              },
              "metadata": {
                "designer": {
                  "x": 3201,
                  "y": -584,
                  "name": "Create Article"
                },
                "restore": {
                  "expect": {
                    "folderId": {
                      "mode": "chose",
                      "path": [
                        "Active Docs",
                        "Content generator - articles"
                      ]
                    },
                    "destination": {
                      "label": "My Drive"
                    }
                  },
                  "parameters": {
                    "__IMTCONN__": {
                      "data": {
                        "scoped": "true",
                        "connection": "google"
                      },
                      "label": "daniel.ronai.mail@gmail.com (daniel.ronai.mail@gmail.com)"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "__IMTCONN__",
                    "type": "account:google",
                    "label": "Connection",
                    "required": true
                  }
                ],
                "expect": [
                  {
                    "name": "name",
                    "type": "text",
                    "label": "Name",
                    "required": true
                  },
                  {
                    "name": "content",
                    "type": "text",
                    "label": "Content",
                    "required": true
                  },
                  {
                    "name": "destination",
                    "type": "select",
                    "label": "Choose a Drive",
                    "required": true,
                    "validate": {
                      "enum": [
                        "drive",
                        "share",
                        "team"
                      ]
                    }
                  },
                  {
                    "name": "header",
                    "type": "boolean",
                    "label": "Insert a Header",
                    "required": true
                  },
                  {
                    "name": "footer",
                    "type": "boolean",
                    "label": "Insert a Footer",
                    "required": true
                  },
                  {
                    "name": "folderId",
                    "type": "folder",
                    "label": "New Document's Location",
                    "required": true
                  }
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "metadata": {
    "instant": true,
    "version": 1,
    "scenario": {
      "roundtrips": 1,
      "maxErrors": 3,
      "autoCommit": true,
      "autoCommitTriggerLast": true,
      "sequential": false,
      "slots": null,
      "confidential": false,
      "dataloss": false,
      "dlq": true,
      "freshVariables": false
    },
    "designer": {
      "orphans": []
    },
    "zone": "eu2.make.com",
    "notes": []
  }
}